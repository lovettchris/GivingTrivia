@model MsftGivingTriviaWebApp.Models.SetKeyModel
@{
    ViewBag.Title = "Set Api Key";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("SetKey", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "addGame" }))
{
    @Html.AntiForgeryToken()
    <h4>Enter the firebase API key.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.ApiKey, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.ApiKey, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Submit" />
        </div>
    </div>
    <div id="errormessage" class="errormessage">
        @if (Model != null)
        {
        <p>@Model.Result</p>
        }
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@if (ViewBag.IsAdmin)
{
    <script>
        function InitAdmin(){
            $("#addGame").submit(function () {
                var q = $("#addGame");
                q.validate();
                if (q.valid()) {
                    var form = q[0];
                    if (isadmin) {
                        AddNewGame(form.Title.value);
                    } else {
                        ShowError("You do not have permission to add new games")
                    }
                }
                return false;
            });
        };
    </script>
}
else
{
    <script>
        function InitAdmin(){

        }
    </script>
}

<script>
    $(window).load(function () {
        InitGame(gameConfig);
        InitAdmin();
    });
</script>
